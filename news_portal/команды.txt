# Создаём новый проект с вертуальным окружением
python -m venv venv
source venv/bin/activate
pip install django
pip install -r requirements.txt
django-admin startproject news_portal

python manage.py createsuperuser

cd news_portal
python manage.py runserver

cd news_portal # переходим через открыть через терминал
python3 manage.py startapp news

settings.py -> NSTALLED_APP -> add'news'

python3 manage.py makemigrations
python3 manage.py migrate

python3 manage.py shell
from news.models import *

git branch
git branch new_branch_name
git checkout -b new_branch_name
https://habr.com/ru/company/ruvds/blog/599929/

# Список команд для shell

from news.models import *

u1 = User.objects.create_user('Громов')
u2 = User.objects.create_user('Солнцев')
a1 = Author.objects.create(authorUser=u1)
a2 = Author.objects.create(authorUser=u2)
a3 = Author.objects.create(authorUser=u3)

c1 = Category.objects.create(name='Спорт')
c2 = Category.objects.create(name='Политика')
c3 = Category.objects.create(name='Искусство')
c4 = Category.objects.create(name='Экономика')

p1 = Post.objects.create(author=a2, categoryType='AR', title='Новости хлеборобов', text='Мастерство в любом деле приходит с опытом!')

p2 = Post.objects.create(author=a2, categoryType='AR', title='В разгаре страда', text='Комбайны выходят на поля. Скоро хлеб отправиться в закрома родины')

n1 = Post.objects.create(author=a1, categoryType='NW', title='На полях страны', text='Молодые колхозники осваивают новую технику')
n2 = Post.objects.create(author=a2, categoryType='NW', title='В мире политики', text='С официальным визитом приьыл посол Зимбабве')

pc1 = PostCategory.objects.create(post=p1, category=c1)
pc2 = PostCategory.objects.create(post=p1, category=c2)

pc3 = PostCategory.objects.create(post=p2, category=c2)
pc4 = PostCategory.objects.create(post=p2, category=c4)

pc5 = PostCategory.objects.create(post=n1, category=c2)
pc6 = PostCategory.objects.create(post=n1, category=c3)

co1 = Comment.objects.create(user=u1, post=p1, text='о сколько нам открытий чудных')
co2 = Comment.objects.create(user=u2, post=p2, text='готовит просвещенья дух')
co3 = Comment.objects.create(user=u1, post=n1, text='и опыт сын ошибок трудных')
co4 = Comment.objects.create(user=u2, post=p1, text='и гений парадоксов друг')

co1.like()
p1.dislike()
p2.like()
p2.like()
n1.like()
co2.dislike()
co3.like()
co3.like()
co4.like()

a1 = Author.objects.get(pk=1)
a2 = Author.objects.get(pk=2)

a1.update_rating()
a2.update_rating()

a = Author.objects.order_by('ratingAuthor')[0]
print(f'Автор: {a.authorUser}, рейтинг: {a.ratingAuthor}')

p = Post.objects.filter().order_by('-rating')[0]

print(f'Дата: {p.dateCreation}, Автор: {p.author.authorUser}, Рейтинг: {p.rating}, Заголовок: {p.title}, Превью: {p.preview()}')

for c in Comment.objects.filter(post_id=p.id):
    print(f'Дата: {c.created}, Автор: {c.user}, Рейтинг: {c.rating}, Текст: {c.text}\r\n')



В ходе работы с модулем вы должны были выполнить следующие задания:

1. Создать новую страницу с адресом /news/, на которой должен выводиться список всех новостей.
2. Вывести все статьи в виде заголовка, даты публикации и первых 20 символов текста.
   Новости должны выводиться в порядке от более свежей к самой старой.
3. Сделать отдельную страницу для полной информации о статье /news/<id новости>.
   На этой странице должна быть вся информация о статье. Название, текст и дата загрузки в формате день.месяц.год.

4. Написать собственный фильтр censor, который заменяет буквы нежелательных слов в заголовках и текстах статей на символ «*».

5. Все новые страницы должны использовать шаблон default.html как основу.

